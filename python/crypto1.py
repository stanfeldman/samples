import binascii

def str_to_bin(s):
	return bin(int(binascii.hexlify(s), 16))[2:]
	
def bin_to_str(s):
	n = int("0b"+s, 2)
	return binascii.unhexlify('%x' % n)
	
def xor(s1_b, s2_b):
	if len(s1_b) > len(s2_b):
		s2_b += "0"*(len(s1_b) - len(s2_b))
	else:
		s1_b += "0"*(len(s2_b) - len(s1_b))
	res = ""
	for i in xrange(len(s1_b)):
		res += str(int(s1_b[i]) ^ int(s2_b[i]))
	return res
	
def encode(message, key):
	return xor(str_to_bin(message), str_to_bin(key))
	
def decode(cipher, key):
	return bin_to_str(xor(cipher, str_to_bin(key)))
	
message = "hello, stas!"
key = "secret"
cipher = encode(message, key)
message2 = decode(cipher, key)
print message == message2
print str_to_bin("a")
cipher
cipher
symbols = [' ','a','b','c','d','e','f','g','h','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',
			'A','B','C','D','E','F','G','H','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
result = ""
for symbol in symbols:
	for i in xrange(len(cipher1)/7 - 7):
		if str_to_bin(symbol) == cipher1[i:i+7]:
			result += symbol
print result
#with open("words.txt", "r") as dict_f:
#	dictionary = [word.strip() for word in dict_f.readlines()]
#	for word in dictionary:
#		print "trying %s" % word
#		key = xor(str_to_bin(word), cipher1)
#		message2 = bin_to_str(xor(cipher2, key))
#		if message2 in dictionary:
#			print message2
