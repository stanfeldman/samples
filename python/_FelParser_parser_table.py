
# _FelParser_parser_table.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x8f3\xfcU\xd7\xae~\xb6\xb6\x8e\xc9\x95\xf1\x06\xa7x'
    
_lr_action_items = {'rparen':([1,4,6,11,12,16,17,18,20,21,],[-6,-11,-9,-10,18,-8,-7,-12,-4,-5,]),'newline':([0,],[3,]),'number':([0,2,9,10,13,14,15,],[4,4,4,4,4,4,4,]),'times':([1,4,6,7,11,16,17,18,20,21,],[10,-11,-9,-10,-10,-8,-7,-12,10,10,]),'plus':([1,4,6,7,8,11,12,16,17,18,19,20,21,],[-6,-11,-9,-10,14,-10,14,-8,-7,-12,14,-4,-5,]),'lparen':([0,2,9,10,13,14,15,],[2,2,2,2,2,2,2,]),'variable':([0,2,9,10,13,14,15,],[7,11,11,11,11,11,11,]),'div':([1,4,6,7,11,16,17,18,20,21,],[9,-11,-9,-10,-10,-8,-7,-12,9,9,]),'eq':([7,],[13,]),'minus':([1,4,6,7,8,11,12,16,17,18,19,20,21,],[-6,-11,-9,-10,15,-10,15,-8,-7,-12,15,-4,-5,]),'$end':([1,3,4,5,6,7,8,11,16,17,18,19,20,21,],[-6,-3,-11,0,-9,-10,-2,-10,-8,-7,-12,-1,-4,-5,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([0,2,13,14,15,],[1,1,1,20,21,]),'expression':([0,2,13,],[8,12,19,]),'statement':([0,],[5,]),'factor':([0,2,9,10,13,14,15,],[6,6,16,17,6,6,6,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> variable eq expression','statement',3,'p_statement_eq','compiler.py',91),
  ('statement -> expression','statement',1,'p_statement_expression','compiler.py',95),
  ('statement -> newline','statement',1,'p_statement_expression','compiler.py',96),
  ('expression -> expression plus term','expression',3,'p_expression_plus','compiler.py',100),
  ('expression -> expression minus term','expression',3,'p_expression_minus','compiler.py',104),
  ('expression -> term','expression',1,'p_expression_term','compiler.py',108),
  ('term -> term times factor','term',3,'p_term_times','compiler.py',112),
  ('term -> term div factor','term',3,'p_term_div','compiler.py',116),
  ('term -> factor','term',1,'p_term_factor','compiler.py',120),
  ('factor -> variable','factor',1,'p_factor_variable','compiler.py',124),
  ('factor -> number','factor',1,'p_factor_number','compiler.py',132),
  ('factor -> lparen expression rparen','factor',3,'p_factor_expression','compiler.py',136),
]
